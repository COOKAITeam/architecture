@startuml Enhanced_Database_Schema
!theme spacelab

' Настройки внешнего вида
skinparam linetype ortho
skinparam packageStyle rectangle

title COOKie Platform - Enhanced Database Schema with Indexes and Constraints

package "Recipe Domain" {
    entity "recipes" as recipes {
        * **id** : UUID <<PK>>
        * **slug** : VARCHAR(255) <<UK>>
        --
        * title : VARCHAR(255)
        * description : TEXT
        history : TEXT
        cuisine_geography : VARCHAR(100)[]
        timeline_category : ENUM('ancient', 'medieval', 'modern', 'contemporary')
        * difficulty_level : SMALLINT (1-5)
        prep_time_minutes : INTEGER
        cook_time_minutes : INTEGER
        * total_time_minutes : INTEGER
        * servings : SMALLINT
        instructions : JSONB
        nutrition_per_serving : JSONB
        nutrition_per_100g : JSONB
        dietary_tags : VARCHAR(50)[]
        allergens : VARCHAR(50)[]
        price_segment : ENUM('low', 'medium', 'high')
        * rating_avg : DECIMAL(3,2) DEFAULT 0
        * rating_count : INTEGER DEFAULT 0
        * view_count : BIGINT DEFAULT 0
        * favorite_count : INTEGER DEFAULT 0
        source_url : VARCHAR(500)
        source_type : ENUM('site', 'video', 'app', 'ugc')
        * moderation_status : ENUM('draft', 'review', 'published', 'rejected')
        moderated_by : UUID <<FK>>
        moderated_at : TIMESTAMP
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        published_at : TIMESTAMP
        --
        **Indexes:**
        idx_recipes_slug (slug)
        idx_recipes_moderation_status (moderation_status)
        idx_recipes_dietary_tags (dietary_tags) USING GIN
        idx_recipes_allergens (allergens) USING GIN
        idx_recipes_cuisine (cuisine_geography) USING GIN
        idx_recipes_rating (rating_avg DESC, rating_count DESC)
        idx_recipes_popularity (view_count DESC, favorite_count DESC)
        idx_recipes_published_at (published_at DESC)
        idx_recipes_total_time (total_time_minutes)
        idx_recipes_fulltext (to_tsvector('russian', title || ' ' || description)) USING GIN
        --
        **Constraints:**
        chk_difficulty_level (difficulty_level BETWEEN 1 AND 5)
        chk_servings_positive (servings > 0)
        chk_rating_range (rating_avg BETWEEN 0 AND 5)
    }

    entity "ingredients" as ingredients {
        * **id** : UUID <<PK>>
        * **name** : VARCHAR(255) <<UK>>
        * **normalized_name** : VARCHAR(255)
        --
        category : VARCHAR(100)
        nutrition_per_100g : JSONB
        allergens : VARCHAR(50)[]
        shelf_life_days : INTEGER
        storage_conditions : TEXT
        substitutes : JSONB
        avg_price_per_kg : DECIMAL(10,2)
        seasonality : VARCHAR(50)[]
        localization : JSONB
        * is_common : BOOLEAN DEFAULT false
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_ingredients_normalized_name (normalized_name)
        idx_ingredients_category (category)
        idx_ingredients_allergens (allergens) USING GIN
        idx_ingredients_seasonality (seasonality) USING GIN
        idx_ingredients_common (is_common) WHERE is_common = true
        --
        **Constraints:**
        chk_price_positive (avg_price_per_kg >= 0)
    }

    entity "recipe_ingredients" as recipe_ingredients {
        * **recipe_id** : UUID <<FK, PK>>
        * **ingredient_id** : UUID <<FK, PK>>
        * **order_index** : SMALLINT
        --
        * quantity : DECIMAL(10,3)
        * unit : VARCHAR(50)
        preparation : VARCHAR(255)
        is_optional : BOOLEAN DEFAULT false
        --
        **Indexes:**
        idx_recipe_ingredients_recipe (recipe_id)
        idx_recipe_ingredients_ingredient (ingredient_id)
        --
        **Constraints:**
        chk_quantity_positive (quantity > 0)
    }

    entity "categories" as categories {
        * **id** : UUID <<PK>>
        * **slug** : VARCHAR(100) <<UK>>
        --
        * name : VARCHAR(100)
        parent_id : UUID <<FK>>
        description : TEXT
        icon_url : VARCHAR(255)
        * level : SMALLINT
        * path : ltree
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_categories_slug (slug)
        idx_categories_parent (parent_id)
        idx_categories_path (path) USING GIST
        idx_categories_level (level)
    }

    entity "recipe_categories" as recipe_categories {
        * **recipe_id** : UUID <<FK, PK>>
        * **category_id** : UUID <<FK, PK>>
        --
        is_primary : BOOLEAN DEFAULT false
        --
        **Indexes:**
        idx_recipe_categories_recipe (recipe_id)
        idx_recipe_categories_category (category_id)
        idx_recipe_categories_primary (recipe_id) WHERE is_primary = true
    }

    entity "tags" as tags {
        * **id** : UUID <<PK>>
        * **name** : VARCHAR(50) <<UK>>
        --
        * type : ENUM('technique', 'meal_type', 'season', 'holiday', 'equipment', 'diet', 'other')
        description : TEXT
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_tags_name (name)
        idx_tags_type (type)
    }

    entity "recipe_tags" as recipe_tags {
        * **recipe_id** : UUID <<FK, PK>>
        * **tag_id** : UUID <<FK, PK>>
        --
        **Indexes:**
        idx_recipe_tags_recipe (recipe_id)
        idx_recipe_tags_tag (tag_id)
    }
}

package "User Domain" {
    entity "users" as users {
        * **id** : UUID <<PK>>
        * **email** : VARCHAR(255) <<UK>>
        --
        username : VARCHAR(100) <<UK>>
        password_hash : VARCHAR(255)
        * first_name : VARCHAR(100)
        last_name : VARCHAR(100)
        avatar_url : VARCHAR(500)
        * role : ENUM('user', 'admin', 'moderator', 'partner')
        * subscription_tier : ENUM('free', 'premium', 'pro')
        subscription_valid_until : TIMESTAMP
        * is_active : BOOLEAN DEFAULT true
        * email_verified : BOOLEAN DEFAULT false
        email_verified_at : TIMESTAMP
        last_login_at : TIMESTAMP
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_users_email (email)
        idx_users_username (username)
        idx_users_role (role)
        idx_users_subscription (subscription_tier, subscription_valid_until)
        idx_users_active (is_active) WHERE is_active = true
        --
        **Constraints:**
        chk_email_format (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')
    }

    entity "user_profiles" as user_profiles {
        * **user_id** : UUID <<PK, FK>>
        --
        date_of_birth : DATE
        gender : ENUM('male', 'female', 'other', 'prefer_not_to_say')
        height_cm : SMALLINT
        weight_kg : DECIMAL(5,2)
        activity_level : ENUM('sedentary', 'light', 'moderate', 'active', 'very_active')
        goal : ENUM('weight_loss', 'weight_gain', 'maintenance', 'muscle_gain', 'health')
        target_weight_kg : DECIMAL(5,2)
        target_calories : INTEGER
        dietary_preferences : VARCHAR(50)[]
        allergies : VARCHAR(50)[]
        disliked_ingredients : UUID[]
        cuisine_preferences : VARCHAR(100)[]
        cooking_skill_level : SMALLINT (1-5)
        max_cooking_time : INTEGER
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_user_profiles_goal (goal)
        idx_user_profiles_dietary (dietary_preferences) USING GIN
        idx_user_profiles_allergies (allergies) USING GIN
    }

    entity "user_recipe_ratings" as ratings {
        * **id** : UUID <<PK>>
        --
        * user_id : UUID <<FK>>
        * recipe_id : UUID <<FK>>
        * rating : SMALLINT (1-5)
        review : TEXT
        helpful_count : INTEGER DEFAULT 0
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_ratings_user_recipe (user_id, recipe_id) <<UK>>
        idx_ratings_recipe (recipe_id)
        idx_ratings_rating (rating)
        idx_ratings_created (created_at DESC)
        --
        **Constraints:**
        chk_rating_range (rating BETWEEN 1 AND 5)
        uk_user_recipe (user_id, recipe_id)
    }

    entity "user_favorites" as favorites {
        * **user_id** : UUID <<FK, PK>>
        * **recipe_id** : UUID <<FK, PK>>
        --
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_favorites_user (user_id)
        idx_favorites_recipe (recipe_id)
        idx_favorites_created (created_at DESC)
    }
}

package "Meal Planning Domain" {
    entity "meal_plans" as meal_plans {
        * **id** : UUID <<PK>>
        --
        * user_id : UUID <<FK>>
        * start_date : DATE
        * end_date : DATE
        * meals_per_day : SMALLINT
        target_calories_per_day : INTEGER
        * status : ENUM('draft', 'active', 'completed', 'cancelled')
        * generated_at : TIMESTAMP DEFAULT NOW()
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_meal_plans_user (user_id)
        idx_meal_plans_dates (start_date, end_date)
        idx_meal_plans_status (status)
    }

    entity "meal_plan_items" as meal_plan_items {
        * **id** : UUID <<PK>>
        --
        * plan_id : UUID <<FK>>
        * day_number : SMALLINT (1-31)
        * meal_type : ENUM('breakfast', 'lunch', 'dinner', 'snack')
        * recipe_id : UUID <<FK>>
        servings : DECIMAL(4,2) DEFAULT 1
        notes : TEXT
        is_completed : BOOLEAN DEFAULT false
        completed_at : TIMESTAMP
        --
        **Indexes:**
        idx_meal_plan_items_plan (plan_id)
        idx_meal_plan_items_day (plan_id, day_number)
        idx_meal_plan_items_recipe (recipe_id)
        --
        **Constraints:**
        uk_plan_day_meal (plan_id, day_number, meal_type)
    }

    entity "shopping_lists" as shopping_lists {
        * **id** : UUID <<PK>>
        --
        * plan_id : UUID <<FK>>
        * user_id : UUID <<FK>>
        * status : ENUM('pending', 'in_progress', 'completed')
        estimated_cost : DECIMAL(10,2)
        actual_cost : DECIMAL(10,2)
        * created_at : TIMESTAMP DEFAULT NOW()
        completed_at : TIMESTAMP
        --
        **Indexes:**
        idx_shopping_lists_user (user_id)
        idx_shopping_lists_plan (plan_id)
        idx_shopping_lists_status (status)
    }

    entity "shopping_list_items" as shopping_list_items {
        * **id** : UUID <<PK>>
        --
        * shopping_list_id : UUID <<FK>>
        * ingredient_id : UUID <<FK>>
        * quantity : DECIMAL(10,3)
        * unit : VARCHAR(50)
        category : VARCHAR(100)
        is_purchased : BOOLEAN DEFAULT false
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_shopping_list_items_list (shopping_list_id)
        idx_shopping_list_items_ingredient (ingredient_id)
        idx_shopping_list_items_category (category)
    }
}

package "Analytics Domain" {
    entity "user_events" as user_events {
        * **id** : UUID <<PK>>
        --
        user_id : UUID
        * event_type : VARCHAR(100)
        * event_data : JSONB
        session_id : UUID
        device_type : VARCHAR(50)
        ip_address : INET
        user_agent : TEXT
        * created_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_events_user (user_id)
        idx_events_type (event_type)
        idx_events_created (created_at DESC)
        idx_events_session (session_id)
        idx_events_data (event_data) USING GIN
        --
        **Partitioning:**
        PARTITION BY RANGE (created_at)
    }

    entity "recipe_analytics" as recipe_analytics {
        * **recipe_id** : UUID <<PK, FK>>
        * **date** : DATE <<PK>>
        --
        * views : BIGINT DEFAULT 0
        * unique_views : INTEGER DEFAULT 0
        * favorites_added : INTEGER DEFAULT 0
        * favorites_removed : INTEGER DEFAULT 0
        * ratings_submitted : INTEGER DEFAULT 0
        avg_rating_daily : DECIMAL(3,2)
        avg_time_on_page_seconds : INTEGER
        * updated_at : TIMESTAMP DEFAULT NOW()
        --
        **Indexes:**
        idx_recipe_analytics_date (date DESC)
        idx_recipe_analytics_recipe (recipe_id)
        --
        **Partitioning:**
        PARTITION BY RANGE (date)
    }
}

package "Payment Domain" {
    entity "subscriptions" as subscriptions {
        * **id** : UUID <<PK>>
        --
        * user_id : UUID <<FK>>
        * tier : ENUM('free', 'premium', 'pro')
        * status : ENUM('active', 'cancelled', 'expired', 'suspended')
        * started_at : TIMESTAMP
        expires_at : TIMESTAMP
        auto_renew : BOOLEAN DEFAULT true
        payment_method : VARCHAR(50)
        * created_at : TIMESTAMP DEFAULT NOW()
        * updated_at : TIMESTAMP DEFAULT NOW()
        cancelled_at : TIMESTAMP
        --
        **Indexes:**
        idx_subscriptions_user (user_id)
        idx_subscriptions_status (status)
        idx_subscriptions_expires (expires_at)
    }

    entity "payments" as payments {
        * **id** : UUID <<PK>>
        * **transaction_id** : VARCHAR(255) <<UK>>
        --
        * subscription_id : UUID <<FK>>
        * user_id : UUID <<FK>>
        * amount : DECIMAL(10,2)
        * currency : VARCHAR(3) DEFAULT 'RUB'
        * status : ENUM('pending', 'completed', 'failed', 'refunded')
        payment_method : VARCHAR(50)
        gateway_response : JSONB
        * created_at : TIMESTAMP DEFAULT NOW()
        processed_at : TIMESTAMP
        --
        **Indexes:**
        idx_payments_transaction (transaction_id)
        idx_payments_subscription (subscription_id)
        idx_payments_user (user_id)
        idx_payments_status (status)
        idx_payments_created (created_at DESC)
    }
}

' Relationships
recipes ||--o{ recipe_ingredients : contains
ingredients ||--o{ recipe_ingredients : used_in
recipes ||--o{ recipe_categories : belongs_to
categories ||--o{ recipe_categories : categorizes
recipes ||--o{ recipe_tags : tagged_with
tags ||--o{ recipe_tags : tags
categories ||--o{ categories : parent_of (self-reference)

users ||--o| user_profiles : has
users ||--o{ ratings : submits
recipes ||--o{ ratings : rated_by
users ||--o{ favorites : saves
recipes ||--o{ favorites : saved_by

users ||--o{ meal_plans : creates
meal_plans ||--o{ meal_plan_items : contains
recipes ||--o{ meal_plan_items : included_in
meal_plans ||--o{ shopping_lists : generates
users ||--o{ shopping_lists : owns
shopping_lists ||--o{ shopping_list_items : contains
ingredients ||--o{ shopping_list_items : listed_in

users ||--o{ user_events : generates
recipes ||--o{ recipe_analytics : tracked_by

users ||--o{ subscriptions : has
subscriptions ||--o{ payments : billed_by

@enduml
