@startuml Recipe_Service_Components_C4_Level3
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Component Diagram for Recipe Service (C4 Level 3)

Container(api_gateway, "API Gateway", "Node.js/Express", "Маршрутизация запросов")
Person(user, "Пользователь", "B2C пользователь")

Container_Boundary(recipe_service, "Recipe Service") {

    ' API Layer
    Component(recipe_controller, "Recipe Controller", "NestJS Controller", "REST API endpoints для рецептов")
    Component(ingredient_controller, "Ingredient Controller", "NestJS Controller", "REST API endpoints для ингредиентов")
    Component(category_controller, "Category Controller", "NestJS Controller", "REST API endpoints для категорий")
    Component(rating_controller, "Rating Controller", "NestJS Controller", "REST API endpoints для рейтингов")

    ' Business Logic Layer
    Component(recipe_service_logic, "Recipe Service Logic", "TypeScript Service", "Бизнес-логика управления рецептами")
    Component(search_service, "Search Service", "TypeScript Service", "Полнотекстовый поиск с фильтрацией")
    Component(recommendation_service, "Recommendation Service", "TypeScript Service", "Базовые рекомендации по предпочтениям")
    Component(nutrition_calculator, "Nutrition Calculator", "TypeScript Service", "Расчет КБЖУ на основе ингредиентов")
    Component(validation_service, "Validation Service", "TypeScript Service", "Валидация данных рецептов")
    Component(moderation_service, "Moderation Service", "TypeScript Service", "Модерация и публикация контента")

    ' Data Access Layer
    Component(recipe_repository, "Recipe Repository", "TypeORM Repository", "Доступ к таблице recipes")
    Component(ingredient_repository, "Ingredient Repository", "TypeORM Repository", "Доступ к таблице ingredients")
    Component(category_repository, "Category Repository", "TypeORM Repository", "Доступ к таблице categories")
    Component(rating_repository, "Rating Repository", "TypeORM Repository", "Доступ к таблице ratings")

    ' Integration Layer
    Component(cache_adapter, "Cache Adapter", "Redis Client", "Кэширование рецептов и результатов поиска")
    Component(storage_adapter, "Storage Adapter", "S3 Client", "Загрузка и получение изображений")
    Component(event_publisher, "Event Publisher", "Kafka Producer", "Публикация событий для аналитики")

    ' Utilities
    Component(image_processor, "Image Processor", "Sharp Library", "Обработка и оптимизация изображений")
    Component(slug_generator, "Slug Generator", "Utility", "Генерация URL-friendly идентификаторов")
}

ContainerDb(recipe_db, "Recipe Database", "PostgreSQL", "Хранение рецептов и связанных данных")
ContainerDb(cache, "Cache", "Redis", "Кэширование")
ContainerDb(file_storage, "File Storage", "S3/MinIO", "Хранение изображений")
Container(message_queue, "Message Queue", "Kafka", "Очередь событий")

Container_Ext(analytics_service, "Analytics Service", "Python/FastAPI", "Обработка событий")
Container_Ext(user_service, "User Service", "Node.js/NestJS", "Данные пользователей")
Container_Ext(enrichment_service, "Data Enrichment Service", "Python/FastAPI", "Обогащение данных")

' Связи пользователя с API Gateway
Rel(user, api_gateway, "HTTP запросы", "HTTPS/JSON")
Rel(api_gateway, recipe_controller, "Маршрутизирует к Recipe endpoints", "HTTP/REST")
Rel(api_gateway, ingredient_controller, "Маршрутизирует к Ingredient endpoints", "HTTP/REST")
Rel(api_gateway, category_controller, "Маршрутизирует к Category endpoints", "HTTP/REST")
Rel(api_gateway, rating_controller, "Маршрутизирует к Rating endpoints", "HTTP/REST")

' Связи Controllers -> Services
Rel(recipe_controller, recipe_service_logic, "Вызывает", "Method Call")
Rel(recipe_controller, search_service, "Вызывает для поиска", "Method Call")
Rel(recipe_controller, validation_service, "Валидирует входные данные", "Method Call")
Rel(ingredient_controller, recipe_service_logic, "Вызывает", "Method Call")
Rel(category_controller, recipe_service_logic, "Вызывает", "Method Call")
Rel(rating_controller, recipe_service_logic, "Вызывает", "Method Call")

' Связи Services -> Services
Rel(recipe_service_logic, recommendation_service, "Получает рекомендации", "Method Call")
Rel(recipe_service_logic, nutrition_calculator, "Рассчитывает КБЖУ", "Method Call")
Rel(recipe_service_logic, moderation_service, "Проверяет статус модерации", "Method Call")
Rel(search_service, recommendation_service, "Персонализирует результаты", "Method Call")

' Связи Services -> Repositories
Rel(recipe_service_logic, recipe_repository, "CRUD операции", "Method Call")
Rel(recipe_service_logic, ingredient_repository, "Получает ингредиенты", "Method Call")
Rel(recipe_service_logic, category_repository, "Получает категории", "Method Call")
Rel(recipe_service_logic, rating_repository, "Получает/обновляет рейтинги", "Method Call")
Rel(search_service, recipe_repository, "Поиск по индексам", "Method Call")
Rel(recommendation_service, recipe_repository, "Получает рецепты", "Method Call")
Rel(nutrition_calculator, ingredient_repository, "Получает нутриенты", "Method Call")

' Связи Services -> Adapters
Rel(recipe_service_logic, cache_adapter, "Кэширует/извлекает", "Method Call")
Rel(recipe_service_logic, storage_adapter, "Загружает изображения", "Method Call")
Rel(recipe_service_logic, event_publisher, "Публикует события", "Method Call")
Rel(search_service, cache_adapter, "Кэширует результаты поиска", "Method Call")
Rel(rating_controller, event_publisher, "Публикует события оценки", "Method Call")

' Связи с утилитами
Rel(recipe_service_logic, image_processor, "Обрабатывает изображения", "Method Call")
Rel(recipe_service_logic, slug_generator, "Генерирует URL-slugs", "Method Call")

' Связи Repositories -> Database
Rel(recipe_repository, recipe_db, "SQL запросы", "PostgreSQL Protocol")
Rel(ingredient_repository, recipe_db, "SQL запросы", "PostgreSQL Protocol")
Rel(category_repository, recipe_db, "SQL запросы", "PostgreSQL Protocol")
Rel(rating_repository, recipe_db, "SQL запросы", "PostgreSQL Protocol")

' Связи Adapters -> External Storage
Rel(cache_adapter, cache, "Get/Set", "Redis Protocol")
Rel(storage_adapter, file_storage, "Upload/Download", "S3 API")
Rel(event_publisher, message_queue, "Публикует события", "Kafka Protocol")

' Связи с другими сервисами
Rel(message_queue, analytics_service, "Доставляет события", "Kafka Consumer")
Rel(recommendation_service, user_service, "Получает предпочтения", "HTTP/REST")
Rel(enrichment_service, recipe_service_logic, "Обогащает данные", "HTTP/REST")

SHOW_LEGEND()

@enduml
